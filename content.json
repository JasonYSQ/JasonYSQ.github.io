[{"title":"","slug":"BinarySearch","date":"2017-11-30T10:13:17.000Z","updated":"2017-11-30T11:03:29.681Z","comments":true,"path":"2017/11/30/BinarySearch/","link":"","permalink":"http://yoursite.com/2017/11/30/BinarySearch/","excerpt":"算法第四版_二分法二分查找二分查找又称折半查找，优点是比较次数少，查找速度快，平均性能好，占用系统内存较少；其缺点是要求待查表为有序表，且插入删除困难。因此，折半查找方法适用于不经常变动而查找频繁的有序列表。首先，假设表中元素是按升序排列，将表中间位置记录的关键字与查找关键字比较，如果两者相等，则查找成功；否则利用中间位置记录将表分成前、后两个子表，如果中间位置记录的关键字大于查找关键字，则进一步查找前一子表，否则进一步查找后一子表。重复以上过程，直到找到满足条件的记录，使查找成功，或直到子表不存在为止，此时查找不成功。 从这里我们可以了解二分查找适用于有序表，下面我们可以看一下用C#实现的二分查找","text":"算法第四版_二分法二分查找二分查找又称折半查找，优点是比较次数少，查找速度快，平均性能好，占用系统内存较少；其缺点是要求待查表为有序表，且插入删除困难。因此，折半查找方法适用于不经常变动而查找频繁的有序列表。首先，假设表中元素是按升序排列，将表中间位置记录的关键字与查找关键字比较，如果两者相等，则查找成功；否则利用中间位置记录将表分成前、后两个子表，如果中间位置记录的关键字大于查找关键字，则进一步查找前一子表，否则进一步查找后一子表。重复以上过程，直到找到满足条件的记录，使查找成功，或直到子表不存在为止，此时查找不成功。 从这里我们可以了解二分查找适用于有序表，下面我们可以看一下用C#实现的二分查找 二分查找 递归12345678910111213141516171819///&lt;param name=&quot;arr&quot;&gt;数组&lt;/param&gt;///&lt;param name=&quot;low&quot;&gt;开始索引 0&lt;/param&gt;///&lt;param name=&quot;high&quot;&gt;结束索引 &lt;/param&gt;///&lt;param name=&quot;key&quot;&gt;要查找的对象&lt;/param&gt;public static int BinarySearch(int[] arr, int low, int high, int key)&#123; int mid = (low + high) / 2; if (low &gt; high) return -1; else &#123; if (arr[mid] == key) return mid; else if (arr[mid] &gt; key) return BinarySearch(arr, low, mid - 1, key); else return BinarySearch(arr, mid + 1, high, key); &#125;&#125; 二分查找 非递归123456789101112131415///&lt;param name=&quot;arr&quot;&gt;数组&lt;/param&gt;///&lt;param name=&quot;key&quot;&gt;要查找的对象&lt;/param&gt;public static int BinarySearch(int key,int[] arr)&#123; int low = 0; int max = arr.Length - 1; while (low&lt;=max) &#123; int mid = low + (max - low) / 2; if (key &lt;arr[ mid]) max = mid - 1; else if (key &gt;arr[ mid]) low = mid + 1; else return mid; &#125; return -1;&#125;","categories":[],"tags":[{"name":"算法第四版","slug":"算法第四版","permalink":"http://yoursite.com/tags/算法第四版/"},{"name":"基础知识","slug":"基础知识","permalink":"http://yoursite.com/tags/基础知识/"}]},{"title":"","slug":"HexoUse","date":"2017-10-16T07:37:43.000Z","updated":"2017-10-16T15:35:23.610Z","comments":true,"path":"2017/10/16/HexoUse/","link":"","permalink":"http://yoursite.com/2017/10/16/HexoUse/","excerpt":"hexo的使用hexo new “postName” #新建文章hexo new page “pageName” #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）hexo deploy #部署到GitHubhexo help #查看帮助hexo version #查看Hexo的版本","text":"hexo的使用hexo new “postName” #新建文章hexo new page “pageName” #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）hexo deploy #部署到GitHubhexo help #查看帮助hexo version #查看Hexo的版本 缩写 :hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 组合命令 :hexo s -g #生成并本地预览hexo d -g #生成并上传","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"","slug":"Severn","date":"2017-10-16T06:45:38.000Z","updated":"2017-10-16T15:35:11.715Z","comments":true,"path":"2017/10/16/Severn/","link":"","permalink":"http://yoursite.com/2017/10/16/Severn/","excerpt":"","text":"啦啦啦~ 大家好 我是一名unity开发的小菜鸟，建设此站记录学习中的一些体会，之后会不定时更新的","categories":[],"tags":[{"name":"杂记","slug":"杂记","permalink":"http://yoursite.com/tags/杂记/"}]}]